/* tslint:disable */
/* eslint-disable */
/**
 * Camera Store API
 * Fujifilm Camera Store API built with MedusaJS v2 - E-commerce backend with custom featured categories functionality
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface FeaturedCategory
 */
export interface FeaturedCategory {
    /**
     * Category ID
     * @type {string}
     * @memberof FeaturedCategory
     */
    id: string;
    /**
     * Category name
     * @type {string}
     * @memberof FeaturedCategory
     */
    categoryName: string;
    /**
     * Category description
     * @type {string}
     * @memberof FeaturedCategory
     */
    categoryDescription?: string | null;
    /**
     * Category URL handle
     * @type {string}
     * @memberof FeaturedCategory
     */
    categoryHandle: string;
    /**
     * Hero banner image URL
     * @type {string}
     * @memberof FeaturedCategory
     */
    heroImageUrl: string;
    /**
     * Sort order for homepage display
     * @type {number}
     * @memberof FeaturedCategory
     */
    displayOrder: number;
    /**
     * Top 8 products from this category
     * @type {Array<Product>}
     * @memberof FeaturedCategory
     */
    products: Array<Product>;
}

/**
 * Check if a given object implements the FeaturedCategory interface.
 */
export function instanceOfFeaturedCategory(value: object): value is FeaturedCategory {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('categoryName' in value) || value['categoryName'] === undefined) return false;
    if (!('categoryHandle' in value) || value['categoryHandle'] === undefined) return false;
    if (!('heroImageUrl' in value) || value['heroImageUrl'] === undefined) return false;
    if (!('displayOrder' in value) || value['displayOrder'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    return true;
}

export function FeaturedCategoryFromJSON(json: any): FeaturedCategory {
    return FeaturedCategoryFromJSONTyped(json, false);
}

export function FeaturedCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeaturedCategory {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'categoryName': json['category_name'],
        'categoryDescription': json['category_description'] == null ? undefined : json['category_description'],
        'categoryHandle': json['category_handle'],
        'heroImageUrl': json['hero_image_url'],
        'displayOrder': json['display_order'],
        'products': ((json['products'] as Array<any>).map(ProductFromJSON)),
    };
}

export function FeaturedCategoryToJSON(json: any): FeaturedCategory {
    return FeaturedCategoryToJSONTyped(json, false);
}

export function FeaturedCategoryToJSONTyped(value?: FeaturedCategory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'category_name': value['categoryName'],
        'category_description': value['categoryDescription'],
        'category_handle': value['categoryHandle'],
        'hero_image_url': value['heroImageUrl'],
        'display_order': value['displayOrder'],
        'products': ((value['products'] as Array<any>).map(ProductToJSON)),
    };
}

