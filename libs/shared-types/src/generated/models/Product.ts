/* tslint:disable */
/* eslint-disable */
/**
 * Camera Store API
 * Fujifilm Camera Store API built with MedusaJS v2 - E-commerce backend with custom featured categories functionality
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductImage } from './ProductImage';
import {
    ProductImageFromJSON,
    ProductImageFromJSONTyped,
    ProductImageToJSON,
    ProductImageToJSONTyped,
} from './ProductImage';
import type { ProductVariant } from './ProductVariant';
import {
    ProductVariantFromJSON,
    ProductVariantFromJSONTyped,
    ProductVariantToJSON,
    ProductVariantToJSONTyped,
} from './ProductVariant';

/**
 * 
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * Product ID
     * @type {string}
     * @memberof Product
     */
    id: string;
    /**
     * Product title
     * @type {string}
     * @memberof Product
     */
    title: string;
    /**
     * Product URL handle
     * @type {string}
     * @memberof Product
     */
    handle: string;
    /**
     * Product description
     * @type {string}
     * @memberof Product
     */
    description?: string | null;
    /**
     * Product thumbnail image URL
     * @type {string}
     * @memberof Product
     */
    thumbnail: string;
    /**
     * Product images
     * @type {Array<ProductImage>}
     * @memberof Product
     */
    images?: Array<ProductImage>;
    /**
     * Product variants
     * @type {Array<ProductVariant>}
     * @memberof Product
     */
    variants?: Array<ProductVariant>;
    /**
     * Product status
     * @type {string}
     * @memberof Product
     */
    status: ProductStatusEnum;
}


/**
 * @export
 */
export const ProductStatusEnum = {
    Published: 'published',
    Draft: 'draft'
} as const;
export type ProductStatusEnum = typeof ProductStatusEnum[keyof typeof ProductStatusEnum];


/**
 * Check if a given object implements the Product interface.
 */
export function instanceOfProduct(value: object): value is Product {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('handle' in value) || value['handle'] === undefined) return false;
    if (!('thumbnail' in value) || value['thumbnail'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'handle': json['handle'],
        'description': json['description'] == null ? undefined : json['description'],
        'thumbnail': json['thumbnail'],
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ProductImageFromJSON)),
        'variants': json['variants'] == null ? undefined : ((json['variants'] as Array<any>).map(ProductVariantFromJSON)),
        'status': json['status'],
    };
}

export function ProductToJSON(json: any): Product {
    return ProductToJSONTyped(json, false);
}

export function ProductToJSONTyped(value?: Product | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'handle': value['handle'],
        'description': value['description'],
        'thumbnail': value['thumbnail'],
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ProductImageToJSON)),
        'variants': value['variants'] == null ? undefined : ((value['variants'] as Array<any>).map(ProductVariantToJSON)),
        'status': value['status'],
    };
}

