/* tslint:disable */
/* eslint-disable */
/**
 * Camera Store API
 * Fujifilm Camera Store API built with MedusaJS v2 - E-commerce backend with custom featured categories functionality
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
    CategoryToJSONTyped,
} from './Category';

/**
 * 
 * @export
 * @interface CategoryFeaturedResponse
 */
export interface CategoryFeaturedResponse {
    /**
     * 
     * @type {Category}
     * @memberof CategoryFeaturedResponse
     */
    category: Category;
    /**
     * Success message
     * @type {string}
     * @memberof CategoryFeaturedResponse
     */
    message: string;
}

/**
 * Check if a given object implements the CategoryFeaturedResponse interface.
 */
export function instanceOfCategoryFeaturedResponse(value: object): value is CategoryFeaturedResponse {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function CategoryFeaturedResponseFromJSON(json: any): CategoryFeaturedResponse {
    return CategoryFeaturedResponseFromJSONTyped(json, false);
}

export function CategoryFeaturedResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryFeaturedResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'category': CategoryFromJSON(json['category']),
        'message': json['message'],
    };
}

export function CategoryFeaturedResponseToJSON(json: any): CategoryFeaturedResponse {
    return CategoryFeaturedResponseToJSONTyped(json, false);
}

export function CategoryFeaturedResponseToJSONTyped(value?: CategoryFeaturedResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': CategoryToJSON(value['category']),
        'message': value['message'],
    };
}

