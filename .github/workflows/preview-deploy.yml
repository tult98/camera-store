name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: false

jobs:
  setup-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    outputs:
      affected-backend: ${{ steps.affected.outputs.backend }}
      affected-frontend: ${{ steps.affected.outputs.frontend }}
      preview-id: ${{ steps.preview.outputs.id }}
      backend-url: ${{ steps.preview.outputs.backend-url }}
      frontend-url: ${{ steps.preview.outputs.frontend-url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check affected projects
        id: affected
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          AFFECTED_APPS=$(npx nx show projects --affected --base=$BASE_SHA --projects=backend,frontend)
          
          echo "Affected apps: $AFFECTED_APPS"
          
          if echo "$AFFECTED_APPS" | grep -q "backend"; then
            echo "backend=true" >> $GITHUB_OUTPUT
          else
            echo "backend=false" >> $GITHUB_OUTPUT
          fi
          
          if echo "$AFFECTED_APPS" | grep -q "frontend"; then
            echo "frontend=true" >> $GITHUB_OUTPUT
          else
            echo "frontend=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate preview environment ID
        id: preview
        run: |
          PR_NUMBER="${{ github.event.number }}"
          PREVIEW_ID="pr-${PR_NUMBER}"
          
          echo "id=${PREVIEW_ID}" >> $GITHUB_OUTPUT
          echo "backend-url=https://backend-${PREVIEW_ID}.railway.app" >> $GITHUB_OUTPUT
          echo "frontend-url=https://frontend-${PREVIEW_ID}.railway.app" >> $GITHUB_OUTPUT

  quality-checks:
    if: github.event.action != 'closed'
    uses: ./.github/workflows/quality-checks.yml
    with:
      run-all: false

  deploy-preview-backend:
    if: github.event.action != 'closed' && needs.setup-preview.outputs.affected-backend == 'true'
    needs: [setup-preview, quality-checks]
    runs-on: ubuntu-latest
    environment: preview
    defaults:
      run:
        working-directory: apps/backend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: .

      - name: Build backend
        run: nx run backend:build
        working-directory: .

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy preview backend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          PREVIEW_ID: ${{ needs.setup-preview.outputs.preview-id }}
        run: |
          echo "üöÄ Deploying preview backend: $PREVIEW_ID"
          
          # Create or use existing preview environment
          railway environment create $PREVIEW_ID || railway environment use $PREVIEW_ID
          
          # Set basic environment variables
          railway variables set NODE_ENV=staging
          railway variables set RUN_MIGRATIONS=true
          railway variables set STORE_CORS="https://frontend-$PREVIEW_ID.railway.app"
          railway variables set ADMIN_CORS="https://frontend-$PREVIEW_ID.railway.app"
          railway variables set AUTH_CORS="https://frontend-$PREVIEW_ID.railway.app"
          
          # Deploy
          railway up --detach
          
          echo "‚úÖ Preview backend deployed!"

  deploy-preview-frontend:
    if: github.event.action != 'closed' && needs.setup-preview.outputs.affected-frontend == 'true'
    needs: [setup-preview, quality-checks, deploy-preview-backend]
    runs-on: ubuntu-latest
    environment: preview
    defaults:
      run:
        working-directory: apps/frontend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: .

      - name: Build frontend
        env:
          MEDUSA_BACKEND_URL: ${{ needs.setup-preview.outputs.backend-url }}
          NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY: ${{ secrets.MEDUSA_PUBLISHABLE_KEY_PREVIEW }}
          NEXT_PUBLIC_BASE_URL: ${{ needs.setup-preview.outputs.frontend-url }}
          NEXT_PUBLIC_DEFAULT_REGION: us
          NODE_ENV: production
        run: |
          echo "üèóÔ∏è Building preview frontend..."
          echo "Backend URL: $MEDUSA_BACKEND_URL"
          echo "Frontend URL: $NEXT_PUBLIC_BASE_URL"
          
          nx run frontend:build
        working-directory: .

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy preview frontend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          PREVIEW_ID: ${{ needs.setup-preview.outputs.preview-id }}
        run: |
          echo "üöÄ Deploying preview frontend: $PREVIEW_ID"
          
          # Use preview environment
          railway environment use $PREVIEW_ID
          
          # Set environment variables
          railway variables set MEDUSA_BACKEND_URL="${{ needs.setup-preview.outputs.backend-url }}"
          railway variables set NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY="${{ secrets.MEDUSA_PUBLISHABLE_KEY_PREVIEW }}"
          railway variables set NEXT_PUBLIC_BASE_URL="${{ needs.setup-preview.outputs.frontend-url }}"
          railway variables set NEXT_PUBLIC_DEFAULT_REGION="us"
          railway variables set NODE_ENV="production"
          
          # Deploy
          railway up --detach
          
          echo "‚úÖ Preview frontend deployed!"

  comment-preview-urls:
    if: github.event.action != 'closed' && (needs.setup-preview.outputs.affected-backend == 'true' || needs.setup-preview.outputs.affected-frontend == 'true')
    needs: [setup-preview, deploy-preview-backend, deploy-preview-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Comment preview URLs
        uses: actions/github-script@v7
        with:
          script: |
            const { affected_backend, affected_frontend, preview_id, backend_url, frontend_url } = {
              affected_backend: '${{ needs.setup-preview.outputs.affected-backend }}',
              affected_frontend: '${{ needs.setup-preview.outputs.affected-frontend }}',
              preview_id: '${{ needs.setup-preview.outputs.preview-id }}',
              backend_url: '${{ needs.setup-preview.outputs.backend-url }}',
              frontend_url: '${{ needs.setup-preview.outputs.frontend-url }}'
            };
            
            let comment = `## üöÄ Preview Deployment: \`${preview_id}\`\n\n`;
            
            if (affected_backend === 'true') {
              comment += `### Backend\n`;
              comment += `- üîó **API URL**: ${backend_url}\n`;
              comment += `- üìö **Health Check**: ${backend_url}/health\n\n`;
            }
            
            if (affected_frontend === 'true') {
              comment += `### Frontend\n`;
              comment += `- üîó **App URL**: ${frontend_url}\n`;
              comment += `- üõçÔ∏è **Storefront**: ${frontend_url}/store\n\n`;
            }
            
            comment += `### üìù Notes\n`;
            comment += `- Preview environments are automatically cleaned up when the PR is closed\n`;
            comment += `- Changes to this PR will update the preview deployment\n`;
            comment += `- Database uses staging/preview data, not production data\n`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup preview environment
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.number }}"
          PREVIEW_ID="pr-${PR_NUMBER}"
          
          echo "üßπ Cleaning up preview environment: $PREVIEW_ID"
          
          # Install Railway CLI
          npm install -g @railway/cli
          
          # Delete preview environment
          railway environment delete $PREVIEW_ID --yes || echo "Environment may not exist or already deleted"
          
          echo "‚úÖ Preview environment cleanup completed!"

      - name: Comment cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ github.event.number }};
            
            github.rest.issues.createComment({
              issue_number: pr_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üßπ Preview Environment Cleaned Up\n\nThe preview environment for PR #${pr_number} has been automatically cleaned up.`
            });

  skip-preview:
    if: github.event.action != 'closed'
    needs: setup-preview
    runs-on: ubuntu-latest
    steps:
      - name: Skip preview deployment
        if: needs.setup-preview.outputs.affected-backend == 'false' && needs.setup-preview.outputs.affected-frontend == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ‚è≠Ô∏è Preview Deployment Skipped\n\nNo backend or frontend changes detected in this PR. Preview deployment is not needed.`
            });