/* tslint:disable */
/* eslint-disable */
/**
 * Camera Store API
 * Fujifilm Camera Store API built with MedusaJS v2 - E-commerce backend with custom featured categories functionality
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductPrice
 */
export interface ProductPrice {
    /**
     * Price ID
     * @type {string}
     * @memberof ProductPrice
     */
    id: string;
    /**
     * Currency code (ISO 4217)
     * @type {string}
     * @memberof ProductPrice
     */
    currencyCode: string;
    /**
     * Price amount in smallest currency unit
     * @type {number}
     * @memberof ProductPrice
     */
    amount: number;
    /**
     * Price type
     * @type {string}
     * @memberof ProductPrice
     */
    priceType: ProductPricePriceTypeEnum;
}


/**
 * @export
 */
export const ProductPricePriceTypeEnum = {
    Default: 'default',
    Sale: 'sale'
} as const;
export type ProductPricePriceTypeEnum = typeof ProductPricePriceTypeEnum[keyof typeof ProductPricePriceTypeEnum];


/**
 * Check if a given object implements the ProductPrice interface.
 */
export function instanceOfProductPrice(value: object): value is ProductPrice {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('currencyCode' in value) || value['currencyCode'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('priceType' in value) || value['priceType'] === undefined) return false;
    return true;
}

export function ProductPriceFromJSON(json: any): ProductPrice {
    return ProductPriceFromJSONTyped(json, false);
}

export function ProductPriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductPrice {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'currencyCode': json['currency_code'],
        'amount': json['amount'],
        'priceType': json['price_type'],
    };
}

export function ProductPriceToJSON(json: any): ProductPrice {
    return ProductPriceToJSONTyped(json, false);
}

export function ProductPriceToJSONTyped(value?: ProductPrice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'currency_code': value['currencyCode'],
        'amount': value['amount'],
        'price_type': value['priceType'],
    };
}

